syntax = "proto3";
import "nanopb.proto";


option optimize_for = LITE_RUNTIME;
// A very simple protocol definition, consisting of only
// one message.
// 
message Sensor {
    enum sensorType {
        ANALOG = 0;
        SOIL = 1;
        BMP280 = 2;
        VEML_6070 = 3;
    };
    sensorType sensor = 1;
    fixed32 drive_type = 2;
    fixed32 id = 3;
}


message PromMessage {
    enum promType {
        UNKNOWN = 0;
        WRITE = 1;
        READ = 2;
    };
    promType type = 1;
    uint32 page = 2; 
    bytes payload = 3[(nanopb).max_size = 16];
}


message SerialMessage {

    //values greater than 15 are reserved
    //because we stuff extra info in the upper fields
    enum serialAction {
        UNKNOWN = 0;
        WRITE_ACK = 1;
        WRITE_NACK = 2;
        READ_ACK = 3;
        READ_NACK = 4;
        STOP = 5;
        START = 6;
    };
    repeated serialAction action = 1[(nanopb).max_count = 200];
}

message transferMetadata {
    uint32 crc = 1; 
    uint32 length = 2; 
}

message programTransfer {
    enum pTransferAction {
        UNKNOWN = 0;
        BEGIN_MSG = 1;
        BLOCK_TRANSFER = 2;
    };
    pTransferAction action = 1;
    oneof action_type {
        bytes payload = 2[(nanopb).max_size = 16];
        transferMetadata metaData = 3;
    };
}

